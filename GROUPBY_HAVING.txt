GROUPBY
// GROUP BY should come immediately after FROM or WHERE
// SELECT x,y,AGGREGATE_FUNC(z) FROM customer GROUP BY x,y

//// aggregate acts per group

// GROUP BY must have a AGGREGATE_FUNCTION
// GROUP BY groups similar data into one along with AGGREGATE operation
// if no aggregate operation then its liks DISTICT()

//invalid SELECT * FROM payment GROUP BY customer_id
//invalid SELECT customer_id,payment_date,SUM(amount) FROM payment GROUP BY customer_id

SELECT customer_id FROM payment GROUP BY customer_id  //distinct
SELECT customer_id,SUM(amount) FROM payment GROUP BY customer_id   //sum per group
SELECT customer_id,SUM(amount) FROM payment GROUP BY customer_id ORDER BY SUM(amount)
SELECT customer_id,COUNT(amount) FROM payment GROUP BY customer_id ORDER BY SUM(amount) desc

// subgrouping
SELECT customer_id,staff_id,SUM(amount) FROM payment GROUP BY customer_id,staff_id
SELECT customer_id,staff_id,SUM(amount) FROM payment GROUP BY customer_id,staff_id ORDER BY customer_id
SELECT customer_id,staff_id,SUM(amount) FROM payment GROUP BY customer_id,staff_id ORDER BY customer_id,staff_id

// DATE() fetch only date from TIMESTAMP
SELECT DATE(payment_date) FROM payment GROUP BY DATE(payment_date) 
SELECT DATE(payment_date),SUM(amount) FROM payment GROUP BY DATE(payment_date)
SELECT DATE(payment_date),SUM(amount) FROM payment GROUP BY DATE(payment_date) ORDER BY SUM(amount)

// CHALLANGE

SELECT staff_id,COUNT(staff_id) FROM payment GROUP BY staff_id ORDER BY COUNT(staff_id) DESC LIMIT 1
SELECT staff_id,COUNT(*) FROM payment GROUP BY staff_id ORDER BY COUNT(staff_id) DESC LIMIT 1

SELECT rating,ROUND(AVG(replacement_cost),2) FROM film GROUP BY rating

SELECT customer_id,SUM(amount) FROM payment GROUP BY customer_id ORDER BY SUM(amount) DESC LIMIT 5 







HAVING
// Used in conjunction with GROUP BY
// WHERE can be used to filter only non aggregate 
// HAVING is used to filter aggregate after GROUP BY

SELECT customer_id,SUM(amount) FROM payment WHERE customer_id NOT IN (184,87) GROUP BY customer_id

// if we want to filter on the basis of customer use WHERE but on the basis of SUM(amount) cant use WHERE so use HSVING
// invalid SELECT customer_id,SUM(amount) FROM payment GROUP BY customer_id WHERE SUM(amount) = 100

SELECT store_id,COUNT(customer_id) FROM customer GROUP BY store_id
SELECT store_id,COUNT(customer_id) FROM customer GROUP BY store_id HAVING COUNT(customer_id) > 300

// CHALLANGE

SELECT customer_id,COUNT(amount) FROM payment GROUP BY customer_id HAVING COUNT(amount)>=40
SELECT customer_id,SUM(amount) FROM payment WHERE staff_id = 2 GROUP BY customer_id HAVING SUM(amount) > 100

//ASSESSMENT

SELECT customer_id,SUM(amount) FROM payment WHERE staff_id = 2 GROUP BY customer_id HAVING SUM(amount) >= 110
SELECT COUNT(*) FROM film WHERE title LIKE 'J%'
SELECT first_name, last_name FROM customer WHERE first_name LIKE 'E%' AND address_id < 500 ORDER BY customer_id DESC LIMIT 1


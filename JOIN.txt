INNER JOIN
// intersection
// order of table A nd B does not matter
// INNER JOIN    ON 
// final result has all the columns of A + B
// avoid dupliacy
// JOIN is treated as INNER JOIN in Postgresql

situation- find customer that are in both table
SELECT * FROM payment INNER JOIN customer ON payment.customer_id = payment.customer_id
SELECT email, payment.customer_id ,amount FROM payment INNER JOIN customer ON payment.customer_id = payment.customer_id



OUTER JOIN
// union
// with condition removes the intersection part of venn diagram
// order of table A nd B does not matter
// FULL OUTER JOIN    ON 
// final result has all the columns of A + B
// for a match in A and B values are filled in columns
// for no match NULL is filled
// can be used to get unique items to A nd B

situation- find customer that are not in both table(present in either of the table)
SELECT * FROM customer FULL OUTER JOIN payment ON customer.customer_id = payment.customer_id
SELECT * FROM customer FULL OUTER JOIN payment ON customer.customer_id = payment.customer_id 
                          WHERE customer.customer_id IS null AND payment.customer_id IS null





